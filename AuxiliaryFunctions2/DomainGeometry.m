function [w, P, Xi_1, Xi_2, n_1, n_2, p_1, p_2] = DomainGeometry
%Credit goes to Minyeong Kim for this code

Xi_1 = [0 0 0 1/3 2/3 1 1 1]; p_1 = 2; n_1 = length(Xi_1)-p_1-1;
Xi_2 = [0 0 0 1/3 2/3 1 1 1]; p_2 = 2; n_2 = length(Xi_2)-p_2-1;
d = 2;
r_in = 1; r_out = 2;
P_old = [...
0.0000 1.0000 1.0000;
0.2612 1.0000 0.9024;
0.7346 0.7346 0.8373;
1.0000 0.2612 0.9024;
1.0000 0.0000 1.0000;
0.0000 1.2500 1.0000;
0.3265 1.2500 0.9024;
0.9182 0.9182 0.8373;
1.2500 0.3265 0.9024;
1.2500 0.0000 1.0000;
0.0000 1.7500 1.0000;
0.4571 1.7500 0.9024;
1.2856 1.2856 0.8373;
1.7500 0.4571 0.9024;
1.7500 0.0000 1.0000;
0.0000 2.2500 1.0000;
0.5877 2.2500 0.9024;
1.6528 1.6528 0.8373;
2.2500 0.5877 0.9024;
2.2500 0.0000 1.0000;
0.0000 2.5000 1.0000;
0.6530 2.5000 0.9024;
1.8365 1.8365 0.8373;
2.5000 0.6530 0.9024;
2.5000 0.0000 1.0000;
];

% Modify r_in and r_out from Borden et al example.
% * Borden et al. example has r_in = 1, r_out = 2.5
dP = zeros(size(P_old));
for j = 1:n_2
for i = 1:n_1
dP(n_1*(j-1)+i,1:2) = P_old(n_1*(j-1)+i,1:2) - P_old(i,1:2);
dP(n_1*(j-1)+i,1:2) = dP(n_1*(j-1)+i,1:2) * (r_out-r_in)/1.5;
dP(n_1*(j-1)+i,1:2) = dP(n_1*(j-1)+i,1:2) + r_in*P_old(i,1:2);
P_old(n_1*(j-1)+i,1:2) = dP(n_1*(j-1)+i,1:2);
end
end
w = P_old(:,d+1);
P = P_old(:, 1:d);

end